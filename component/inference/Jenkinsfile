pipeline {
    agent any
    options {
        buildDiscarder logRotator(
            daysToKeepStr: '16',
            numToKeepStr: '10'
        )
    }
    stages {
        stage('versioning') {
            steps {
                script {
                    dir("${WORKSPACE}/..") { // Navigating to the component directory
                        sh './versioning.sh' // Run the versioning script
                    }
                }
            }
        }
        stage('build') {
            steps {
                echo 'build inference'
            }
        }
        stage("test") {
            steps {
                echo "pipenv run pytest"
            }
        }
        stage("publish_inference") {
            steps {
                script {
                    def config = readJSON file: "${WORKSPACE}/build.json" // Update the path to build.json
                    def inferenceConfig = config.script_paths.inference_image
                    def region = inferenceConfig.region
                    def project = inferenceConfig.project
                    def repository = inferenceConfig.repository
                    def imageName = inferenceConfig.imageName
                    def imageTAG = inferenceConfig.imageTAG

                    // Changing the working directory to where the Dockerfile is located
                    dir("${WORKSPACE}") { // Using WORKSPACE instead of WORKSPACE/component/inference
                        sh "bash inference/dockerfile.sh" // Adjust the path to the script
                        sh "gcloud auth configure-docker us-west1-docker.pkg.dev"
                        sh "docker build -t inference -f inference/Dockerfile ." // Adjust the path to the Dockerfile
                        sh "docker tag inference ${region}/${project}/${repository}/${imageName}:${imageTAG}"
                        sh "docker push ${region}/${project}/${repository}/${imageName}:${imageTAG}"
                    }
                }
            }
        }
    }
}
