pipeline {
    agent any
    options {
        buildDiscarder logRotator(daysToKeepStr: '16', numToKeepStr: '10')
    }
    stages {
        stage("Prepare Build") {
            steps {
                sh "cp ${WORKSPACE}/component/build.json ${WORKSPACE}/component/test/"
            }
        }
        stage("Check Changes") {
            steps {
                script {
                    def previousVersion = sh(script: 'git show HEAD~1:component/test/version.txt', returnStdout: true).trim()
                    echo "Previous version: ${previousVersion}"
                    def currentVersion = sh(script: "cat ${WORKSPACE}/component/test/version.txt", returnStdout: true).trim()
                    echo "Current version: ${currentVersion}"
                    if (previousVersion != currentVersion) {
                        echo "Version file has changed. Proceeding with image build..."
                        buildImage()
                    } else {
                        echo "No changes in the version file. Skipping image build."
                    }
                }
            }
        }
    }
}

def buildImage() {
    script {
        def version = sh(script: 'cat ${WORKSPACE}/component/test/version.txt', returnStdout: true).trim()
        def dateTime = sh(script: 'date +"%Y%m%d%H%M"', returnStdout: true).trim()
        def imageTag = "${version}-${dateTime}"
        def config = readJSON file: "${WORKSPACE}/component/build.json"
        def testConfig = config.script_paths.test_image
        def region = testConfig.region
        def project = testConfig.project
        def repository = testConfig.repository
        def imageName = testConfig.imageName
        def pythonVersion = testConfig.pythonVersion

        sh "cp ${WORKSPACE}/component/build.json ${WORKSPACE}/component/test/"
        dir("${WORKSPACE}/component/test") {
            sh "gcloud auth configure-docker us-west1-docker.pkg.dev"
            sh "docker build --build-arg=PYTHON_VERSION=${pythonVersion} -t dask-model-test -f Dockerfile ."
            sh "docker tag dask-model-test ${region}/${project}/${repository}/${imageName}:${imageTag}"
            sh "docker push ${region}/${project}/${repository}/${imageName}:${imageTag}"
        }
    }
}
